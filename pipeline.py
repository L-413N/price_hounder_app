# pipeline.py
import asyncio
from mp_parser import parse_product
from database import add_product_to_monitoring
from mp_parser.config import PROXY_POOL

# –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
MAX_CONCURRENT_TASKS = len(PROXY_POOL)  # –∏–ª–∏ len(PROXY_POOL) + 1
semaphore = asyncio.Semaphore(MAX_CONCURRENT_TASKS)

async def parse_and_save_to_db(url: str, user_id: int = 0) -> bool:
    async with semaphore:  # ‚Üê –û–ì–†–ê–ù–ò–ß–ò–í–ê–ï–ú –ü–ê–†–ê–õ–õ–ï–õ–ò–ó–ú
        print(f"üîç –ù–∞—á–∏–Ω–∞—é –ø–∞—Ä—Å–∏–Ω–≥: {url}")
        product = await parse_product(url)

        if product.error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {product.error}")
            return False

        if not product.price:
            print("‚ùå –¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî —Ç–æ–≤–∞—Ä –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥.")
            return False

        success = add_product_to_monitoring(product, user_id)
        return success